C51 COMPILER V9.54   EMCONTROL                                                             06/30/2022 18:44:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE EMCONTROL
OBJECT MODULE PLACED IN EMcontrol.OBJ
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE EMcontrol.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          //电机驱动
   3          sbit EM1_P=P1^5;
   4          sbit EM1_1=P1^2;
   5          sbit EM1_2=P1^1;
   6          
   7          sbit EM2_P=P1^6;
   8          sbit EM2_1=P1^4;
   9          sbit EM2_2=P1^3;
  10          
  11          sbit R_LED=P3^5;
  12          sbit L_LED=P3^4;
  13          sbit R_LED_DOWN=P3^2;
  14          sbit L_LED_DOWN=P3^3;
  15          
  16          
  17          
  18          //循迹避障模块接线
  19          sbit left_led1 = P3^6;  //P3^3;//左寻迹信号 为0 没有识别到黑线 为1识别到黑线
  20          sbit right_led1= P3^7;  //P3^2;//右寻迹信号 为0 没有识别到黑线 为1识别到黑线
  21          
  22          //蜂鸣
  23          sbit beep = P2^3;
  24          //超声
  25          extern unsigned int Distance;
  26          extern void measure_distance();
  27          //延时
  28          extern void delay(unsigned int n,unsigned char mode);
  29          //红外
  30          extern unsigned char ircode[4];
  31          //PWM
  32          extern unsigned char PWM_LEVEL_1;
  33          extern unsigned char PWM_LEVEL_2;
  34          void R_follow();
  35          void L_follow();
  36          
  37          void EMinit()
  38          {
  39   1        EM1_1=1,EM1_2=1;
  40   1        EM2_1=1,EM2_2=1;
  41   1        EM1_P=1;
  42   1        EM2_P=1;
  43   1      }
  44          void go_stop()
  45          {
  46   1      
  47   1        EM1_1=0,EM1_2=0;
  48   1        EM2_1=0,EM2_2=0;
  49   1      
  50   1      }
  51          void go_still()
  52          {
  53   1        EM1_1=1,EM1_2=1;
  54   1        EM2_1=1,EM2_2=1;
  55   1      }
C51 COMPILER V9.54   EMCONTROL                                                             06/30/2022 18:44:38 PAGE 2   

  56          void go_forward()
  57          {
  58   1        EM1_1=1,EM1_2=0;
  59   1        EM2_1=1,EM2_2=0;
  60   1      
  61   1      }
  62          void go_back()
  63          {
  64   1        EM1_1=0,EM1_2=1;
  65   1        EM2_1=0,EM2_2=1;
  66   1      
  67   1      }
  68          void go_left()
  69          {
  70   1        EM1_1=1,EM1_2=1;
  71   1        EM2_1=1,EM2_2=0;
  72   1      
  73   1      }
  74          void go_right()
  75          {
  76   1        EM1_1=1,EM1_2=0;
  77   1        EM2_1=1,EM2_2=1;
  78   1      
  79   1      }
  80          void rotate_l()
  81          {
  82   1        EM1_1=0,EM1_2=1;
  83   1        EM2_1=1,EM2_2=0;
  84   1        
  85   1      }
  86          void rotate_r()
  87          {
  88   1        EM1_1=1,EM1_2=0;
  89   1        EM2_1=0,EM2_2=1;
  90   1      
  91   1      }
  92          void accelerate()
  93          {
  94   1        switch(PWM_LEVEL_1)
  95   1        {
  96   2          case 2:PWM_LEVEL_1=4;break;
  97   2          case 4:PWM_LEVEL_1=6;break;   
  98   2          case 6:PWM_LEVEL_1=8;break;
  99   2          case 8:PWM_LEVEL_1=10;break;
 100   2        }
 101   1        switch(PWM_LEVEL_2)
 102   1        {
 103   2          case 2:PWM_LEVEL_2=4;break;
 104   2          case 4:PWM_LEVEL_2=6;break;   
 105   2          case 6:PWM_LEVEL_2=8;break;
 106   2          case 8:PWM_LEVEL_2=10;break;    
 107   2        }
 108   1      }
 109          void decelerate()
 110          {
 111   1        switch(PWM_LEVEL_1)
 112   1        {
 113   2          case 10:PWM_LEVEL_1=8;break;    
 114   2          case 8:PWM_LEVEL_1=6;break;
 115   2          case 6:PWM_LEVEL_1=4;break;
 116   2          case 4:PWM_LEVEL_1=2;break;
 117   2        }
C51 COMPILER V9.54   EMCONTROL                                                             06/30/2022 18:44:38 PAGE 3   

 118   1        switch(PWM_LEVEL_2)
 119   1        {
 120   2          case 10:PWM_LEVEL_2=8;break;    
 121   2          case 8:PWM_LEVEL_2=6;break;
 122   2          case 6:PWM_LEVEL_2=4;break;
 123   2          case 4:PWM_LEVEL_2=2;break;   
 124   2        }
 125   1      }
 126          void find_track()
 127          {
 128   1        if(left_led1 == 0 && right_led1 == 0)//左右寻迹探头识别到黑线
 129   1        {
 130   2          accelerate();
 131   2          accelerate();
 132   2          go_forward();//前进
 133   2          decelerate();
 134   2          decelerate();
 135   2          delay(50,0);
 136   2            go_stop();
 137   2        }
 138   1        else
 139   1        {
 140   2          if(left_led1 == 1 && right_led1 == 0)//小车左边出线，右转修正
 141   2          {
 142   3            go_stop();
 143   3            delay(20,0);
 144   3            go_left();//左转
 145   3            delay(350,0);
 146   3            go_stop();
 147   3          }
 148   2          if(left_led1 == 0 && right_led1 == 1)//小车右边出线，左转修正
 149   2          {
 150   3            go_stop();
 151   3            delay(20,0);
 152   3            go_right();//右转
 153   3            delay(350,0);
 154   3            go_stop();
 155   3          }
 156   2          /*if(left_led1 == 1 && right_led1 == 1)//左右寻迹探头都没识别到黑线
 157   2          {
 158   2            go_back();//后退
 159   2            delay(20,0);
 160   2            go_stop();
 161   2          }   */
 162   2        }
 163   1      }
 164          void auto_avoid()
 165          {
 166   1        //PT0 = 1;//防止PWM影响US
 167   1        measure_distance();
 168   1        go_forward();
 169   1        if(Distance>300)
 170   1        {
 171   2        if(R_LED==0&&L_LED==1)
 172   2        {
 173   3          go_left();
 174   3        }
 175   2        if(R_LED==1&&L_LED==0)
 176   2        {
 177   3         go_right();
 178   3        }
 179   2      }
C51 COMPILER V9.54   EMCONTROL                                                             06/30/2022 18:44:38 PAGE 4   

 180   1        if(Distance<300)
 181   1        {
 182   2          if(R_LED_DOWN==0&&L_LED_DOWN==1)
 183   2          {
 184   3            go_left();
 185   3          }
 186   2          if(R_LED_DOWN==1&&L_LED_DOWN==0)
 187   2          {
 188   3            go_right();
 189   3          }
 190   2          if(R_LED_DOWN==0&&L_LED_DOWN==0)
 191   2          {
 192   3            rotate_r();
 193   3          }
 194   2          if(R_LED_DOWN==1&&L_LED_DOWN==1)
 195   2          {     
 196   3            if(R_LED==0&&L_LED==1)
 197   3            {
 198   4              go_left();
 199   4            }
 200   3            if(R_LED==1&&L_LED==0)
 201   3            {
 202   4              go_right();
 203   4            }
 204   3            if(R_LED==0&&L_LED==0)
 205   3            {
 206   4              rotate_r();
 207   4            }
 208   3            if(R_LED==1&&L_LED==1)
 209   3            {
 210   4              rotate_r();
 211   4            }
 212   3          }
 213   2        }
 214   1      }
 215          
 216          void auto_follow()//物体跟随
 217          {
 218   1      
 219   1        //PT0 = 1;//防止PWM影响US
 220   1        measure_distance();
 221   1        //为0 识别障碍物 为1没有识别到障碍物
 222   1        if((300<Distance && Distance < 800))
 223   1        { /*
 224   2          if(left_led2 == 0 && right_led2 == 0)//左右识别到障碍物，前进跟随
 225   2          {
 226   2            go_forward();//前进
 227   2            delay(10,0);
 228   2            go_stop();
 229   2          }
 230   2          if(left_led2 == 1 && right_led2 == 0)//小车右侧识别到障碍物，右转跟随
 231   2          {
 232   2            go_right();//右转
 233   2          }
 234   2          if(left_led2 == 0 && right_led2 == 1)//小车左侧识别到障碍物，左转跟随
 235   2          {
 236   2            go_left();//左转
 237   2          }*/
 238   2            go_left();
 239   2          delay(20,0);
 240   2            go_forward();//前进
 241   2            delay(10,0);
C51 COMPILER V9.54   EMCONTROL                                                             06/30/2022 18:44:38 PAGE 5   

 242   2        }
 243   1        else
 244   1        {
 245   2          go_stop();
 246   2        }
 247   1        
 248   1        if(R_LED_DOWN==0||L_LED_DOWN==0)
 249   1        {
 250   2          if(R_LED_DOWN==0)
 251   2          {
 252   3            R_follow();
 253   3          }
 254   2          else
 255   2          {
 256   3            L_follow(); 
 257   3          }
 258   2        }
 259   1        else
 260   1        {
 261   2          go_stop();
 262   2        }
 263   1        /*else if(Distance<500)
 264   1        {
 265   1          go_back();//
 266   1          delay(10,0);
 267   1      
 268   1        }
 269   1        else  
 270   1        {
 271   1          go_stop();
 272   1          delay(5,0);
 273   1        } */
 274   1      }
 275          
 276          void R_follow()
 277          {
 278   1        
 279   1        if(R_LED_DOWN==0&&R_LED==0)
 280   1        { 
 281   2          go_forward();
 282   2        }
 283   1        if(R_LED_DOWN==0&&R_LED==1)
 284   1        {
 285   2          go_right();
 286   2        }
 287   1        if(R_LED_DOWN==1&&R_LED==1)
 288   1        {
 289   2          stop();
*** WARNING C206 IN LINE 289 OF EMcontrol.c: 'stop': missing function-prototype
 290   2        }
 291   1      
 292   1      }
 293          
 294          void L_follow()
 295          {
 296   1        
 297   1        if(L_LED_DOWN==0&&L_LED==0)
 298   1        { 
 299   2          go_forward();
 300   2        }
 301   1        if(L_LED_DOWN==0&&L_LED==1)
 302   1        {
C51 COMPILER V9.54   EMCONTROL                                                             06/30/2022 18:44:38 PAGE 6   

 303   2          go_left();
 304   2        }
 305   1        if(L_LED_DOWN==1&&L_LED==1)
 306   1        {
 307   2          stop();
 308   2        }
 309   1      
 310   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    561    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
